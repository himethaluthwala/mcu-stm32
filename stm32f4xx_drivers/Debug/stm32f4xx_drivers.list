
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008bc  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a44  08000a4c  00001a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a44  08000a44  00001a4c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000a44  08000a44  00001a4c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000a44  08000a4c  00001a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a44  08000a44  00001a44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000a48  08000a48  00001a48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001a4c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00001a4c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a8f  00000000  00000000  00001a76  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002b4  00000000  00000000  00002505  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  000027c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  00002888  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001fed  00000000  00000000  00002914  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000107c  00000000  00000000  00004901  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008d62  00000000  00000000  0000597d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000e6df  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000028c  00000000  00000000  0000e724  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006a  00000000  00000000  0000e9b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000a2c 	.word	0x08000a2c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000a2c 	.word	0x08000a2c

080001c8 <delay>:

#define BTN_PRESSED		1


void delay(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 250000; i++);	// gives ~200ms delay with system clock of 16MHz
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a04      	ldr	r2, [pc, #16]	@ (80001f0 <delay+0x28>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d9f8      	bls.n	80001d4 <delay+0xc>
}
 80001e2:	bf00      	nop
 80001e4:	bf00      	nop
 80001e6:	370c      	adds	r7, #12
 80001e8:	46bd      	mov	sp, r7
 80001ea:	bc80      	pop	{r7}
 80001ec:	4770      	bx	lr
 80001ee:	bf00      	nop
 80001f0:	0003d08f 	.word	0x0003d08f

080001f4 <main>:


int main(void)
{
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b086      	sub	sp, #24
 80001f8:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIO_LED, GPIO_Btn;

	// clear memory values of structures
	memset(&GPIO_LED, 0, sizeof(GPIO_LED));
 80001fa:	f107 030c 	add.w	r3, r7, #12
 80001fe:	220c      	movs	r2, #12
 8000200:	2100      	movs	r1, #0
 8000202:	4618      	mov	r0, r3
 8000204:	f000 fbe6 	bl	80009d4 <memset>
	memset(&GPIO_Btn, 0, sizeof(GPIO_Btn));
 8000208:	463b      	mov	r3, r7
 800020a:	220c      	movs	r2, #12
 800020c:	2100      	movs	r1, #0
 800020e:	4618      	mov	r0, r3
 8000210:	f000 fbe0 	bl	80009d4 <memset>

	// Green LED connected to PD12
	GPIO_LED.pGPIOx = GPIOD;
 8000214:	4b19      	ldr	r3, [pc, #100]	@ (800027c <main+0x88>)
 8000216:	60fb      	str	r3, [r7, #12]
	GPIO_LED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000218:	230c      	movs	r3, #12
 800021a:	743b      	strb	r3, [r7, #16]
	GPIO_LED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800021c:	2301      	movs	r3, #1
 800021e:	747b      	strb	r3, [r7, #17]
	GPIO_LED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000220:	2302      	movs	r3, #2
 8000222:	74bb      	strb	r3, [r7, #18]
	GPIO_LED.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000224:	2300      	movs	r3, #0
 8000226:	753b      	strb	r3, [r7, #20]
	GPIO_LED.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000228:	2300      	movs	r3, #0
 800022a:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 800022c:	2101      	movs	r1, #1
 800022e:	4813      	ldr	r0, [pc, #76]	@ (800027c <main+0x88>)
 8000230:	f000 fa04 	bl	800063c <GPIO_PeriClockControl>
	GPIO_Init(&GPIO_LED);
 8000234:	f107 030c 	add.w	r3, r7, #12
 8000238:	4618      	mov	r0, r3
 800023a:	f000 f85d 	bl	80002f8 <GPIO_Init>

	// User button connected to PA0
	GPIO_Btn.pGPIOx = GPIOA;
 800023e:	4b10      	ldr	r3, [pc, #64]	@ (8000280 <main+0x8c>)
 8000240:	603b      	str	r3, [r7, #0]
	GPIO_Btn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000242:	2300      	movs	r3, #0
 8000244:	713b      	strb	r3, [r7, #4]
	GPIO_Btn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_RT;		// rising edge trigger since user button pulled to high when pressed
 8000246:	2305      	movs	r3, #5
 8000248:	717b      	strb	r3, [r7, #5]
	GPIO_Btn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800024a:	2302      	movs	r3, #2
 800024c:	71bb      	strb	r3, [r7, #6]
	GPIO_Btn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800024e:	2300      	movs	r3, #0
 8000250:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000252:	2101      	movs	r1, #1
 8000254:	480a      	ldr	r0, [pc, #40]	@ (8000280 <main+0x8c>)
 8000256:	f000 f9f1 	bl	800063c <GPIO_PeriClockControl>
	GPIO_Init(&GPIO_Btn);
 800025a:	463b      	mov	r3, r7
 800025c:	4618      	mov	r0, r3
 800025e:	f000 f84b 	bl	80002f8 <GPIO_Init>

	// Button IRQ configurations
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI0, NVIC_IRQ_PRI15);
 8000262:	210f      	movs	r1, #15
 8000264:	2006      	movs	r0, #6
 8000266:	f000 fb69 	bl	800093c <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI0, ENABLE);
 800026a:	2101      	movs	r1, #1
 800026c:	2006      	movs	r0, #6
 800026e:	f000 fae1 	bl	8000834 <GPIO_IRQInterruptConfig>

	return 0;
 8000272:	2300      	movs	r3, #0
}
 8000274:	4618      	mov	r0, r3
 8000276:	3718      	adds	r7, #24
 8000278:	46bd      	mov	sp, r7
 800027a:	bd80      	pop	{r7, pc}
 800027c:	40020c00 	.word	0x40020c00
 8000280:	40020000 	.word	0x40020000

08000284 <EXTI0_IRQHandler>:

void EXTI0_IRQHandler(void)
{
 8000284:	b580      	push	{r7, lr}
 8000286:	af00      	add	r7, sp, #0
	delay();	// 200ms delay to avoid button de-bouncing
 8000288:	f7ff ff9e 	bl	80001c8 <delay>
	GPIO_IRQHandling(GPIO_PIN_NO_0);
 800028c:	2000      	movs	r0, #0
 800028e:	f000 fb81 	bl	8000994 <GPIO_IRQHandling>
	GPIO_ToggleOuputPin(GPIOD, GPIO_PIN_NO_12);
 8000292:	210c      	movs	r1, #12
 8000294:	4802      	ldr	r0, [pc, #8]	@ (80002a0 <EXTI0_IRQHandler+0x1c>)
 8000296:	f000 fab9 	bl	800080c <GPIO_ToggleOuputPin>
}
 800029a:	bf00      	nop
 800029c:	bd80      	pop	{r7, pc}
 800029e:	bf00      	nop
 80002a0:	40020c00 	.word	0x40020c00

080002a4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a4:	480d      	ldr	r0, [pc, #52]	@ (80002dc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002a6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002a8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002ac:	480c      	ldr	r0, [pc, #48]	@ (80002e0 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ae:	490d      	ldr	r1, [pc, #52]	@ (80002e4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b0:	4a0d      	ldr	r2, [pc, #52]	@ (80002e8 <LoopForever+0xe>)
  movs r3, #0
 80002b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b4:	e002      	b.n	80002bc <LoopCopyDataInit>

080002b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ba:	3304      	adds	r3, #4

080002bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c0:	d3f9      	bcc.n	80002b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002c2:	4a0a      	ldr	r2, [pc, #40]	@ (80002ec <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c4:	4c0a      	ldr	r4, [pc, #40]	@ (80002f0 <LoopForever+0x16>)
  movs r3, #0
 80002c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c8:	e001      	b.n	80002ce <LoopFillZerobss>

080002ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002cc:	3204      	adds	r2, #4

080002ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d0:	d3fb      	bcc.n	80002ca <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002d2:	f000 fb87 	bl	80009e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002d6:	f7ff ff8d 	bl	80001f4 <main>

080002da <LoopForever>:

LoopForever:
  b LoopForever
 80002da:	e7fe      	b.n	80002da <LoopForever>
  ldr   r0, =_estack
 80002dc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e8:	08000a4c 	.word	0x08000a4c
  ldr r2, =_sbss
 80002ec:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f0:	2000001c 	.word	0x2000001c

080002f4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f4:	e7fe      	b.n	80002f4 <ADC_IRQHandler>
	...

080002f8 <GPIO_Init>:
 * Notes:					None
 *
 */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80002f8:	b480      	push	{r7}
 80002fa:	b087      	sub	sp, #28
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000300:	2300      	movs	r3, #0
 8000302:	617b      	str	r3, [r7, #20]

	//1. configure GPIO pin mode
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)		// non-interrupt mode
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	795b      	ldrb	r3, [r3, #5]
 8000308:	2b03      	cmp	r3, #3
 800030a:	d81f      	bhi.n	800034c <GPIO_Init+0x54>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	795b      	ldrb	r3, [r3, #5]
 8000310:	461a      	mov	r2, r3
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	791b      	ldrb	r3, [r3, #4]
 8000316:	005b      	lsls	r3, r3, #1
 8000318:	fa02 f303 	lsl.w	r3, r2, r3
 800031c:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);		//clearing bit fields
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	681b      	ldr	r3, [r3, #0]
 8000322:	681a      	ldr	r2, [r3, #0]
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	791b      	ldrb	r3, [r3, #4]
 8000328:	4619      	mov	r1, r3
 800032a:	2303      	movs	r3, #3
 800032c:	408b      	lsls	r3, r1
 800032e:	43db      	mvns	r3, r3
 8000330:	4619      	mov	r1, r3
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	681b      	ldr	r3, [r3, #0]
 8000336:	400a      	ands	r2, r1
 8000338:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	6819      	ldr	r1, [r3, #0]
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	681b      	ldr	r3, [r3, #0]
 8000344:	697a      	ldr	r2, [r7, #20]
 8000346:	430a      	orrs	r2, r1
 8000348:	601a      	str	r2, [r3, #0]
 800034a:	e0d1      	b.n	80004f0 <GPIO_Init+0x1f8>
	}
	else		// interrupt mode
	{
		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_FT) {
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	795b      	ldrb	r3, [r3, #5]
 8000350:	2b04      	cmp	r3, #4
 8000352:	d817      	bhi.n	8000384 <GPIO_Init+0x8c>
			// configure the FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000354:	4b4a      	ldr	r3, [pc, #296]	@ (8000480 <GPIO_Init+0x188>)
 8000356:	68db      	ldr	r3, [r3, #12]
 8000358:	687a      	ldr	r2, [r7, #4]
 800035a:	7912      	ldrb	r2, [r2, #4]
 800035c:	4611      	mov	r1, r2
 800035e:	2201      	movs	r2, #1
 8000360:	408a      	lsls	r2, r1
 8000362:	4611      	mov	r1, r2
 8000364:	4a46      	ldr	r2, [pc, #280]	@ (8000480 <GPIO_Init+0x188>)
 8000366:	430b      	orrs	r3, r1
 8000368:	60d3      	str	r3, [r2, #12]
			// clear corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800036a:	4b45      	ldr	r3, [pc, #276]	@ (8000480 <GPIO_Init+0x188>)
 800036c:	689b      	ldr	r3, [r3, #8]
 800036e:	687a      	ldr	r2, [r7, #4]
 8000370:	7912      	ldrb	r2, [r2, #4]
 8000372:	4611      	mov	r1, r2
 8000374:	2201      	movs	r2, #1
 8000376:	408a      	lsls	r2, r1
 8000378:	43d2      	mvns	r2, r2
 800037a:	4611      	mov	r1, r2
 800037c:	4a40      	ldr	r2, [pc, #256]	@ (8000480 <GPIO_Init+0x188>)
 800037e:	400b      	ands	r3, r1
 8000380:	6093      	str	r3, [r2, #8]
 8000382:	e035      	b.n	80003f0 <GPIO_Init+0xf8>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RT) {
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	795b      	ldrb	r3, [r3, #5]
 8000388:	2b05      	cmp	r3, #5
 800038a:	d817      	bhi.n	80003bc <GPIO_Init+0xc4>
			// configure the RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800038c:	4b3c      	ldr	r3, [pc, #240]	@ (8000480 <GPIO_Init+0x188>)
 800038e:	689b      	ldr	r3, [r3, #8]
 8000390:	687a      	ldr	r2, [r7, #4]
 8000392:	7912      	ldrb	r2, [r2, #4]
 8000394:	4611      	mov	r1, r2
 8000396:	2201      	movs	r2, #1
 8000398:	408a      	lsls	r2, r1
 800039a:	4611      	mov	r1, r2
 800039c:	4a38      	ldr	r2, [pc, #224]	@ (8000480 <GPIO_Init+0x188>)
 800039e:	430b      	orrs	r3, r1
 80003a0:	6093      	str	r3, [r2, #8]
			// clear corresponding FTSR bit
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003a2:	4b37      	ldr	r3, [pc, #220]	@ (8000480 <GPIO_Init+0x188>)
 80003a4:	68db      	ldr	r3, [r3, #12]
 80003a6:	687a      	ldr	r2, [r7, #4]
 80003a8:	7912      	ldrb	r2, [r2, #4]
 80003aa:	4611      	mov	r1, r2
 80003ac:	2201      	movs	r2, #1
 80003ae:	408a      	lsls	r2, r1
 80003b0:	43d2      	mvns	r2, r2
 80003b2:	4611      	mov	r1, r2
 80003b4:	4a32      	ldr	r2, [pc, #200]	@ (8000480 <GPIO_Init+0x188>)
 80003b6:	400b      	ands	r3, r1
 80003b8:	60d3      	str	r3, [r2, #12]
 80003ba:	e019      	b.n	80003f0 <GPIO_Init+0xf8>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RFT) {
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	795b      	ldrb	r3, [r3, #5]
 80003c0:	2b06      	cmp	r3, #6
 80003c2:	d815      	bhi.n	80003f0 <GPIO_Init+0xf8>
			// configure both registers
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003c4:	4b2e      	ldr	r3, [pc, #184]	@ (8000480 <GPIO_Init+0x188>)
 80003c6:	68db      	ldr	r3, [r3, #12]
 80003c8:	687a      	ldr	r2, [r7, #4]
 80003ca:	7912      	ldrb	r2, [r2, #4]
 80003cc:	4611      	mov	r1, r2
 80003ce:	2201      	movs	r2, #1
 80003d0:	408a      	lsls	r2, r1
 80003d2:	4611      	mov	r1, r2
 80003d4:	4a2a      	ldr	r2, [pc, #168]	@ (8000480 <GPIO_Init+0x188>)
 80003d6:	430b      	orrs	r3, r1
 80003d8:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003da:	4b29      	ldr	r3, [pc, #164]	@ (8000480 <GPIO_Init+0x188>)
 80003dc:	689b      	ldr	r3, [r3, #8]
 80003de:	687a      	ldr	r2, [r7, #4]
 80003e0:	7912      	ldrb	r2, [r2, #4]
 80003e2:	4611      	mov	r1, r2
 80003e4:	2201      	movs	r2, #1
 80003e6:	408a      	lsls	r2, r1
 80003e8:	4611      	mov	r1, r2
 80003ea:	4a25      	ldr	r2, [pc, #148]	@ (8000480 <GPIO_Init+0x188>)
 80003ec:	430b      	orrs	r3, r1
 80003ee:	6093      	str	r3, [r2, #8]
		}

		// configure GPIO Port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;		// index for EXTI control register
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	791b      	ldrb	r3, [r3, #4]
 80003f4:	089b      	lsrs	r3, r3, #2
 80003f6:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;		// offset within register
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	791b      	ldrb	r3, [r3, #4]
 80003fc:	f003 0303 	and.w	r3, r3, #3
 8000400:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);		// GPIO port code
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	4a1f      	ldr	r2, [pc, #124]	@ (8000484 <GPIO_Init+0x18c>)
 8000408:	4293      	cmp	r3, r2
 800040a:	d04d      	beq.n	80004a8 <GPIO_Init+0x1b0>
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	4a1d      	ldr	r2, [pc, #116]	@ (8000488 <GPIO_Init+0x190>)
 8000412:	4293      	cmp	r3, r2
 8000414:	d032      	beq.n	800047c <GPIO_Init+0x184>
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	4a1c      	ldr	r2, [pc, #112]	@ (800048c <GPIO_Init+0x194>)
 800041c:	4293      	cmp	r3, r2
 800041e:	d02b      	beq.n	8000478 <GPIO_Init+0x180>
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	4a1a      	ldr	r2, [pc, #104]	@ (8000490 <GPIO_Init+0x198>)
 8000426:	4293      	cmp	r3, r2
 8000428:	d024      	beq.n	8000474 <GPIO_Init+0x17c>
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	681b      	ldr	r3, [r3, #0]
 800042e:	4a19      	ldr	r2, [pc, #100]	@ (8000494 <GPIO_Init+0x19c>)
 8000430:	4293      	cmp	r3, r2
 8000432:	d01d      	beq.n	8000470 <GPIO_Init+0x178>
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	4a17      	ldr	r2, [pc, #92]	@ (8000498 <GPIO_Init+0x1a0>)
 800043a:	4293      	cmp	r3, r2
 800043c:	d016      	beq.n	800046c <GPIO_Init+0x174>
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	681b      	ldr	r3, [r3, #0]
 8000442:	4a16      	ldr	r2, [pc, #88]	@ (800049c <GPIO_Init+0x1a4>)
 8000444:	4293      	cmp	r3, r2
 8000446:	d00f      	beq.n	8000468 <GPIO_Init+0x170>
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	681b      	ldr	r3, [r3, #0]
 800044c:	4a14      	ldr	r2, [pc, #80]	@ (80004a0 <GPIO_Init+0x1a8>)
 800044e:	4293      	cmp	r3, r2
 8000450:	d008      	beq.n	8000464 <GPIO_Init+0x16c>
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	4a13      	ldr	r2, [pc, #76]	@ (80004a4 <GPIO_Init+0x1ac>)
 8000458:	4293      	cmp	r3, r2
 800045a:	d101      	bne.n	8000460 <GPIO_Init+0x168>
 800045c:	2308      	movs	r3, #8
 800045e:	e024      	b.n	80004aa <GPIO_Init+0x1b2>
 8000460:	2300      	movs	r3, #0
 8000462:	e022      	b.n	80004aa <GPIO_Init+0x1b2>
 8000464:	2307      	movs	r3, #7
 8000466:	e020      	b.n	80004aa <GPIO_Init+0x1b2>
 8000468:	2306      	movs	r3, #6
 800046a:	e01e      	b.n	80004aa <GPIO_Init+0x1b2>
 800046c:	2305      	movs	r3, #5
 800046e:	e01c      	b.n	80004aa <GPIO_Init+0x1b2>
 8000470:	2304      	movs	r3, #4
 8000472:	e01a      	b.n	80004aa <GPIO_Init+0x1b2>
 8000474:	2303      	movs	r3, #3
 8000476:	e018      	b.n	80004aa <GPIO_Init+0x1b2>
 8000478:	2302      	movs	r3, #2
 800047a:	e016      	b.n	80004aa <GPIO_Init+0x1b2>
 800047c:	2301      	movs	r3, #1
 800047e:	e014      	b.n	80004aa <GPIO_Init+0x1b2>
 8000480:	40013c00 	.word	0x40013c00
 8000484:	40020000 	.word	0x40020000
 8000488:	40020400 	.word	0x40020400
 800048c:	40020800 	.word	0x40020800
 8000490:	40020c00 	.word	0x40020c00
 8000494:	40021000 	.word	0x40021000
 8000498:	40021400 	.word	0x40021400
 800049c:	40021800 	.word	0x40021800
 80004a0:	40021c00 	.word	0x40021c00
 80004a4:	40022000 	.word	0x40022000
 80004a8:	2300      	movs	r3, #0
 80004aa:	747b      	strb	r3, [r7, #17]

		SYSCFG_PCLK_EN();		// enable SYSCFG peripheral clock
 80004ac:	4b60      	ldr	r3, [pc, #384]	@ (8000630 <GPIO_Init+0x338>)
 80004ae:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80004b0:	4a5f      	ldr	r2, [pc, #380]	@ (8000630 <GPIO_Init+0x338>)
 80004b2:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80004b6:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] |= (portcode << (temp2 * 4));
 80004b8:	4a5e      	ldr	r2, [pc, #376]	@ (8000634 <GPIO_Init+0x33c>)
 80004ba:	7cfb      	ldrb	r3, [r7, #19]
 80004bc:	3302      	adds	r3, #2
 80004be:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80004c2:	7c79      	ldrb	r1, [r7, #17]
 80004c4:	7cbb      	ldrb	r3, [r7, #18]
 80004c6:	009b      	lsls	r3, r3, #2
 80004c8:	fa01 f303 	lsl.w	r3, r1, r3
 80004cc:	4618      	mov	r0, r3
 80004ce:	4959      	ldr	r1, [pc, #356]	@ (8000634 <GPIO_Init+0x33c>)
 80004d0:	7cfb      	ldrb	r3, [r7, #19]
 80004d2:	4302      	orrs	r2, r0
 80004d4:	3302      	adds	r3, #2
 80004d6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		// enable EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004da:	4b57      	ldr	r3, [pc, #348]	@ (8000638 <GPIO_Init+0x340>)
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	687a      	ldr	r2, [r7, #4]
 80004e0:	7912      	ldrb	r2, [r2, #4]
 80004e2:	4611      	mov	r1, r2
 80004e4:	2201      	movs	r2, #1
 80004e6:	408a      	lsls	r2, r1
 80004e8:	4611      	mov	r1, r2
 80004ea:	4a53      	ldr	r2, [pc, #332]	@ (8000638 <GPIO_Init+0x340>)
 80004ec:	430b      	orrs	r3, r1
 80004ee:	6013      	str	r3, [r2, #0]

	}

	temp = 0;
 80004f0:	2300      	movs	r3, #0
 80004f2:	617b      	str	r3, [r7, #20]

	//2. configure pin output speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	799b      	ldrb	r3, [r3, #6]
 80004f8:	461a      	mov	r2, r3
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	791b      	ldrb	r3, [r3, #4]
 80004fe:	005b      	lsls	r3, r3, #1
 8000500:	fa02 f303 	lsl.w	r3, r2, r3
 8000504:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	689a      	ldr	r2, [r3, #8]
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	791b      	ldrb	r3, [r3, #4]
 8000510:	4619      	mov	r1, r3
 8000512:	2303      	movs	r3, #3
 8000514:	408b      	lsls	r3, r1
 8000516:	43db      	mvns	r3, r3
 8000518:	4619      	mov	r1, r3
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	400a      	ands	r2, r1
 8000520:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	6899      	ldr	r1, [r3, #8]
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	697a      	ldr	r2, [r7, #20]
 800052e:	430a      	orrs	r2, r1
 8000530:	609a      	str	r2, [r3, #8]

	temp = 0;
 8000532:	2300      	movs	r3, #0
 8000534:	617b      	str	r3, [r7, #20]

	//3. configure the pull-up / pull-down settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	79db      	ldrb	r3, [r3, #7]
 800053a:	461a      	mov	r2, r3
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	791b      	ldrb	r3, [r3, #4]
 8000540:	005b      	lsls	r3, r3, #1
 8000542:	fa02 f303 	lsl.w	r3, r2, r3
 8000546:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	681b      	ldr	r3, [r3, #0]
 800054c:	68da      	ldr	r2, [r3, #12]
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	791b      	ldrb	r3, [r3, #4]
 8000552:	4619      	mov	r1, r3
 8000554:	2303      	movs	r3, #3
 8000556:	408b      	lsls	r3, r1
 8000558:	43db      	mvns	r3, r3
 800055a:	4619      	mov	r1, r3
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	681b      	ldr	r3, [r3, #0]
 8000560:	400a      	ands	r2, r1
 8000562:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	68d9      	ldr	r1, [r3, #12]
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	697a      	ldr	r2, [r7, #20]
 8000570:	430a      	orrs	r2, r1
 8000572:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000574:	2300      	movs	r3, #0
 8000576:	617b      	str	r3, [r7, #20]

	//4. configure the output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	7a1b      	ldrb	r3, [r3, #8]
 800057c:	461a      	mov	r2, r3
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	791b      	ldrb	r3, [r3, #4]
 8000582:	fa02 f303 	lsl.w	r3, r2, r3
 8000586:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	685a      	ldr	r2, [r3, #4]
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	791b      	ldrb	r3, [r3, #4]
 8000592:	4619      	mov	r1, r3
 8000594:	2301      	movs	r3, #1
 8000596:	408b      	lsls	r3, r1
 8000598:	43db      	mvns	r3, r3
 800059a:	4619      	mov	r1, r3
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	400a      	ands	r2, r1
 80005a2:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	6859      	ldr	r1, [r3, #4]
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	697a      	ldr	r2, [r7, #20]
 80005b0:	430a      	orrs	r2, r1
 80005b2:	605a      	str	r2, [r3, #4]

	temp = 0;
 80005b4:	2300      	movs	r3, #0
 80005b6:	617b      	str	r3, [r7, #20]

	//5. configure the alternate functionality
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode == GPIO_MODE_ALTFN)
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	7a5b      	ldrb	r3, [r3, #9]
 80005bc:	2b02      	cmp	r3, #2
 80005be:	d131      	bne.n	8000624 <GPIO_Init+0x32c>
	{
		// configure the alternate function mode
		uint8_t temp3, temp4;

		temp3 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;		// alternate function low or high register
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	791b      	ldrb	r3, [r3, #4]
 80005c4:	08db      	lsrs	r3, r3, #3
 80005c6:	743b      	strb	r3, [r7, #16]
		temp4 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;		// offset in the register
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	791b      	ldrb	r3, [r3, #4]
 80005cc:	f003 0307 	and.w	r3, r3, #7
 80005d0:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp3] &= ~(0xF << (4 * temp4));
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	7c3a      	ldrb	r2, [r7, #16]
 80005d8:	3208      	adds	r2, #8
 80005da:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005de:	7bfb      	ldrb	r3, [r7, #15]
 80005e0:	009b      	lsls	r3, r3, #2
 80005e2:	220f      	movs	r2, #15
 80005e4:	fa02 f303 	lsl.w	r3, r2, r3
 80005e8:	43db      	mvns	r3, r3
 80005ea:	4618      	mov	r0, r3
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	7c3a      	ldrb	r2, [r7, #16]
 80005f2:	4001      	ands	r1, r0
 80005f4:	3208      	adds	r2, #8
 80005f6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp3] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp4));
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	7c3a      	ldrb	r2, [r7, #16]
 8000600:	3208      	adds	r2, #8
 8000602:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	7a5b      	ldrb	r3, [r3, #9]
 800060a:	461a      	mov	r2, r3
 800060c:	7bfb      	ldrb	r3, [r7, #15]
 800060e:	009b      	lsls	r3, r3, #2
 8000610:	fa02 f303 	lsl.w	r3, r2, r3
 8000614:	4618      	mov	r0, r3
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	681b      	ldr	r3, [r3, #0]
 800061a:	7c3a      	ldrb	r2, [r7, #16]
 800061c:	4301      	orrs	r1, r0
 800061e:	3208      	adds	r2, #8
 8000620:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 8000624:	bf00      	nop
 8000626:	371c      	adds	r7, #28
 8000628:	46bd      	mov	sp, r7
 800062a:	bc80      	pop	{r7}
 800062c:	4770      	bx	lr
 800062e:	bf00      	nop
 8000630:	40023800 	.word	0x40023800
 8000634:	40013800 	.word	0x40013800
 8000638:	40013c00 	.word	0x40013c00

0800063c <GPIO_PeriClockControl>:
 * Notes:					None
 *
 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 800063c:	b480      	push	{r7}
 800063e:	b083      	sub	sp, #12
 8000640:	af00      	add	r7, sp, #0
 8000642:	6078      	str	r0, [r7, #4]
 8000644:	460b      	mov	r3, r1
 8000646:	70fb      	strb	r3, [r7, #3]

	if (EnorDi == ENABLE)
 8000648:	78fb      	ldrb	r3, [r7, #3]
 800064a:	2b01      	cmp	r3, #1
 800064c:	d162      	bne.n	8000714 <GPIO_PeriClockControl+0xd8>
	{
		if (pGPIOx == GPIOA)
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	4a64      	ldr	r2, [pc, #400]	@ (80007e4 <GPIO_PeriClockControl+0x1a8>)
 8000652:	4293      	cmp	r3, r2
 8000654:	d106      	bne.n	8000664 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000656:	4b64      	ldr	r3, [pc, #400]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 8000658:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800065a:	4a63      	ldr	r2, [pc, #396]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 800065c:	f043 0301 	orr.w	r3, r3, #1
 8000660:	6313      	str	r3, [r2, #48]	@ 0x30
		else if (pGPIOx == GPIOI)
		{
			GPIOI_PCLK_DI();
		}
	}
}
 8000662:	e0b9      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB)
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	4a61      	ldr	r2, [pc, #388]	@ (80007ec <GPIO_PeriClockControl+0x1b0>)
 8000668:	4293      	cmp	r3, r2
 800066a:	d106      	bne.n	800067a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 800066c:	4b5e      	ldr	r3, [pc, #376]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 800066e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000670:	4a5d      	ldr	r2, [pc, #372]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 8000672:	f043 0302 	orr.w	r3, r3, #2
 8000676:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000678:	e0ae      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC)
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	4a5c      	ldr	r2, [pc, #368]	@ (80007f0 <GPIO_PeriClockControl+0x1b4>)
 800067e:	4293      	cmp	r3, r2
 8000680:	d106      	bne.n	8000690 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000682:	4b59      	ldr	r3, [pc, #356]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 8000684:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000686:	4a58      	ldr	r2, [pc, #352]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 8000688:	f043 0304 	orr.w	r3, r3, #4
 800068c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800068e:	e0a3      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD)
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	4a58      	ldr	r2, [pc, #352]	@ (80007f4 <GPIO_PeriClockControl+0x1b8>)
 8000694:	4293      	cmp	r3, r2
 8000696:	d106      	bne.n	80006a6 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000698:	4b53      	ldr	r3, [pc, #332]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 800069a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800069c:	4a52      	ldr	r2, [pc, #328]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 800069e:	f043 0308 	orr.w	r3, r3, #8
 80006a2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006a4:	e098      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE)
 80006a6:	687b      	ldr	r3, [r7, #4]
 80006a8:	4a53      	ldr	r2, [pc, #332]	@ (80007f8 <GPIO_PeriClockControl+0x1bc>)
 80006aa:	4293      	cmp	r3, r2
 80006ac:	d106      	bne.n	80006bc <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80006ae:	4b4e      	ldr	r3, [pc, #312]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 80006b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006b2:	4a4d      	ldr	r2, [pc, #308]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 80006b4:	f043 0310 	orr.w	r3, r3, #16
 80006b8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006ba:	e08d      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF)
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	4a4f      	ldr	r2, [pc, #316]	@ (80007fc <GPIO_PeriClockControl+0x1c0>)
 80006c0:	4293      	cmp	r3, r2
 80006c2:	d106      	bne.n	80006d2 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80006c4:	4b48      	ldr	r3, [pc, #288]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 80006c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006c8:	4a47      	ldr	r2, [pc, #284]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 80006ca:	f043 0320 	orr.w	r3, r3, #32
 80006ce:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006d0:	e082      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG)
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	4a4a      	ldr	r2, [pc, #296]	@ (8000800 <GPIO_PeriClockControl+0x1c4>)
 80006d6:	4293      	cmp	r3, r2
 80006d8:	d106      	bne.n	80006e8 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80006da:	4b43      	ldr	r3, [pc, #268]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 80006dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006de:	4a42      	ldr	r2, [pc, #264]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 80006e0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80006e4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006e6:	e077      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH)
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	4a46      	ldr	r2, [pc, #280]	@ (8000804 <GPIO_PeriClockControl+0x1c8>)
 80006ec:	4293      	cmp	r3, r2
 80006ee:	d106      	bne.n	80006fe <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80006f0:	4b3d      	ldr	r3, [pc, #244]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 80006f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006f4:	4a3c      	ldr	r2, [pc, #240]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 80006f6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80006fa:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006fc:	e06c      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI)
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	4a41      	ldr	r2, [pc, #260]	@ (8000808 <GPIO_PeriClockControl+0x1cc>)
 8000702:	4293      	cmp	r3, r2
 8000704:	d168      	bne.n	80007d8 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000706:	4b38      	ldr	r3, [pc, #224]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 8000708:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800070a:	4a37      	ldr	r2, [pc, #220]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 800070c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000710:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000712:	e061      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		if (pGPIOx == GPIOA)
 8000714:	687b      	ldr	r3, [r7, #4]
 8000716:	4a33      	ldr	r2, [pc, #204]	@ (80007e4 <GPIO_PeriClockControl+0x1a8>)
 8000718:	4293      	cmp	r3, r2
 800071a:	d106      	bne.n	800072a <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 800071c:	4b32      	ldr	r3, [pc, #200]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 800071e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000720:	4a31      	ldr	r2, [pc, #196]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 8000722:	f023 0301 	bic.w	r3, r3, #1
 8000726:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000728:	e056      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB)
 800072a:	687b      	ldr	r3, [r7, #4]
 800072c:	4a2f      	ldr	r2, [pc, #188]	@ (80007ec <GPIO_PeriClockControl+0x1b0>)
 800072e:	4293      	cmp	r3, r2
 8000730:	d106      	bne.n	8000740 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 8000732:	4b2d      	ldr	r3, [pc, #180]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 8000734:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000736:	4a2c      	ldr	r2, [pc, #176]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 8000738:	f023 0302 	bic.w	r3, r3, #2
 800073c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800073e:	e04b      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC)
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	4a2b      	ldr	r2, [pc, #172]	@ (80007f0 <GPIO_PeriClockControl+0x1b4>)
 8000744:	4293      	cmp	r3, r2
 8000746:	d106      	bne.n	8000756 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 8000748:	4b27      	ldr	r3, [pc, #156]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 800074a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800074c:	4a26      	ldr	r2, [pc, #152]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 800074e:	f023 0304 	bic.w	r3, r3, #4
 8000752:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000754:	e040      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD)
 8000756:	687b      	ldr	r3, [r7, #4]
 8000758:	4a26      	ldr	r2, [pc, #152]	@ (80007f4 <GPIO_PeriClockControl+0x1b8>)
 800075a:	4293      	cmp	r3, r2
 800075c:	d106      	bne.n	800076c <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 800075e:	4b22      	ldr	r3, [pc, #136]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 8000760:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000762:	4a21      	ldr	r2, [pc, #132]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 8000764:	f023 0308 	bic.w	r3, r3, #8
 8000768:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800076a:	e035      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE)
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	4a22      	ldr	r2, [pc, #136]	@ (80007f8 <GPIO_PeriClockControl+0x1bc>)
 8000770:	4293      	cmp	r3, r2
 8000772:	d106      	bne.n	8000782 <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 8000774:	4b1c      	ldr	r3, [pc, #112]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 8000776:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000778:	4a1b      	ldr	r2, [pc, #108]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 800077a:	f023 0310 	bic.w	r3, r3, #16
 800077e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000780:	e02a      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF)
 8000782:	687b      	ldr	r3, [r7, #4]
 8000784:	4a1d      	ldr	r2, [pc, #116]	@ (80007fc <GPIO_PeriClockControl+0x1c0>)
 8000786:	4293      	cmp	r3, r2
 8000788:	d106      	bne.n	8000798 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 800078a:	4b17      	ldr	r3, [pc, #92]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 800078c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800078e:	4a16      	ldr	r2, [pc, #88]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 8000790:	f023 0320 	bic.w	r3, r3, #32
 8000794:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000796:	e01f      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG)
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	4a19      	ldr	r2, [pc, #100]	@ (8000800 <GPIO_PeriClockControl+0x1c4>)
 800079c:	4293      	cmp	r3, r2
 800079e:	d106      	bne.n	80007ae <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 80007a0:	4b11      	ldr	r3, [pc, #68]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 80007a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80007a4:	4a10      	ldr	r2, [pc, #64]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 80007a6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80007aa:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80007ac:	e014      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH)
 80007ae:	687b      	ldr	r3, [r7, #4]
 80007b0:	4a14      	ldr	r2, [pc, #80]	@ (8000804 <GPIO_PeriClockControl+0x1c8>)
 80007b2:	4293      	cmp	r3, r2
 80007b4:	d106      	bne.n	80007c4 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 80007b6:	4b0c      	ldr	r3, [pc, #48]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 80007b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80007ba:	4a0b      	ldr	r2, [pc, #44]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 80007bc:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80007c0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80007c2:	e009      	b.n	80007d8 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI)
 80007c4:	687b      	ldr	r3, [r7, #4]
 80007c6:	4a10      	ldr	r2, [pc, #64]	@ (8000808 <GPIO_PeriClockControl+0x1cc>)
 80007c8:	4293      	cmp	r3, r2
 80007ca:	d105      	bne.n	80007d8 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 80007cc:	4b06      	ldr	r3, [pc, #24]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 80007ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80007d0:	4a05      	ldr	r2, [pc, #20]	@ (80007e8 <GPIO_PeriClockControl+0x1ac>)
 80007d2:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80007d6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80007d8:	bf00      	nop
 80007da:	370c      	adds	r7, #12
 80007dc:	46bd      	mov	sp, r7
 80007de:	bc80      	pop	{r7}
 80007e0:	4770      	bx	lr
 80007e2:	bf00      	nop
 80007e4:	40020000 	.word	0x40020000
 80007e8:	40023800 	.word	0x40023800
 80007ec:	40020400 	.word	0x40020400
 80007f0:	40020800 	.word	0x40020800
 80007f4:	40020c00 	.word	0x40020c00
 80007f8:	40021000 	.word	0x40021000
 80007fc:	40021400 	.word	0x40021400
 8000800:	40021800 	.word	0x40021800
 8000804:	40021c00 	.word	0x40021c00
 8000808:	40022000 	.word	0x40022000

0800080c <GPIO_ToggleOuputPin>:
 * Notes:					None
 *
 */

void GPIO_ToggleOuputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800080c:	b480      	push	{r7}
 800080e:	b083      	sub	sp, #12
 8000810:	af00      	add	r7, sp, #0
 8000812:	6078      	str	r0, [r7, #4]
 8000814:	460b      	mov	r3, r1
 8000816:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000818:	687b      	ldr	r3, [r7, #4]
 800081a:	695b      	ldr	r3, [r3, #20]
 800081c:	78fa      	ldrb	r2, [r7, #3]
 800081e:	2101      	movs	r1, #1
 8000820:	fa01 f202 	lsl.w	r2, r1, r2
 8000824:	405a      	eors	r2, r3
 8000826:	687b      	ldr	r3, [r7, #4]
 8000828:	615a      	str	r2, [r3, #20]
}
 800082a:	bf00      	nop
 800082c:	370c      	adds	r7, #12
 800082e:	46bd      	mov	sp, r7
 8000830:	bc80      	pop	{r7}
 8000832:	4770      	bx	lr

08000834 <GPIO_IRQInterruptConfig>:
 * Notes:					None
 *
 */

void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000834:	b480      	push	{r7}
 8000836:	b083      	sub	sp, #12
 8000838:	af00      	add	r7, sp, #0
 800083a:	4603      	mov	r3, r0
 800083c:	460a      	mov	r2, r1
 800083e:	71fb      	strb	r3, [r7, #7]
 8000840:	4613      	mov	r3, r2
 8000842:	71bb      	strb	r3, [r7, #6]
	if (EnorDi == ENABLE) {
 8000844:	79bb      	ldrb	r3, [r7, #6]
 8000846:	2b01      	cmp	r3, #1
 8000848:	d133      	bne.n	80008b2 <GPIO_IRQInterruptConfig+0x7e>
		if (IRQNumber <= 31) {
 800084a:	79fb      	ldrb	r3, [r7, #7]
 800084c:	2b1f      	cmp	r3, #31
 800084e:	d80a      	bhi.n	8000866 <GPIO_IRQInterruptConfig+0x32>
			// program ISER0
			*NVIC_ISER0 |= (1 << IRQNumber);
 8000850:	4b34      	ldr	r3, [pc, #208]	@ (8000924 <GPIO_IRQInterruptConfig+0xf0>)
 8000852:	681b      	ldr	r3, [r3, #0]
 8000854:	79fa      	ldrb	r2, [r7, #7]
 8000856:	2101      	movs	r1, #1
 8000858:	fa01 f202 	lsl.w	r2, r1, r2
 800085c:	4611      	mov	r1, r2
 800085e:	4a31      	ldr	r2, [pc, #196]	@ (8000924 <GPIO_IRQInterruptConfig+0xf0>)
 8000860:	430b      	orrs	r3, r1
 8000862:	6013      	str	r3, [r2, #0]
		} else if (IRQNumber >= 64 && IRQNumber < 96) {
			// program ICER2
			*NVIC_ICER2 |= (1 << (IRQNumber % 32));
		}
	}
}
 8000864:	e059      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
		} else if (IRQNumber > 31 && IRQNumber < 64) {
 8000866:	79fb      	ldrb	r3, [r7, #7]
 8000868:	2b1f      	cmp	r3, #31
 800086a:	d90f      	bls.n	800088c <GPIO_IRQInterruptConfig+0x58>
 800086c:	79fb      	ldrb	r3, [r7, #7]
 800086e:	2b3f      	cmp	r3, #63	@ 0x3f
 8000870:	d80c      	bhi.n	800088c <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 8000872:	4b2d      	ldr	r3, [pc, #180]	@ (8000928 <GPIO_IRQInterruptConfig+0xf4>)
 8000874:	681b      	ldr	r3, [r3, #0]
 8000876:	79fa      	ldrb	r2, [r7, #7]
 8000878:	f002 021f 	and.w	r2, r2, #31
 800087c:	2101      	movs	r1, #1
 800087e:	fa01 f202 	lsl.w	r2, r1, r2
 8000882:	4611      	mov	r1, r2
 8000884:	4a28      	ldr	r2, [pc, #160]	@ (8000928 <GPIO_IRQInterruptConfig+0xf4>)
 8000886:	430b      	orrs	r3, r1
 8000888:	6013      	str	r3, [r2, #0]
 800088a:	e046      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
		} else if (IRQNumber >= 64 && IRQNumber < 96) {
 800088c:	79fb      	ldrb	r3, [r7, #7]
 800088e:	2b3f      	cmp	r3, #63	@ 0x3f
 8000890:	d943      	bls.n	800091a <GPIO_IRQInterruptConfig+0xe6>
 8000892:	79fb      	ldrb	r3, [r7, #7]
 8000894:	2b5f      	cmp	r3, #95	@ 0x5f
 8000896:	d840      	bhi.n	800091a <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNumber % 32));
 8000898:	4b24      	ldr	r3, [pc, #144]	@ (800092c <GPIO_IRQInterruptConfig+0xf8>)
 800089a:	681b      	ldr	r3, [r3, #0]
 800089c:	79fa      	ldrb	r2, [r7, #7]
 800089e:	f002 021f 	and.w	r2, r2, #31
 80008a2:	2101      	movs	r1, #1
 80008a4:	fa01 f202 	lsl.w	r2, r1, r2
 80008a8:	4611      	mov	r1, r2
 80008aa:	4a20      	ldr	r2, [pc, #128]	@ (800092c <GPIO_IRQInterruptConfig+0xf8>)
 80008ac:	430b      	orrs	r3, r1
 80008ae:	6013      	str	r3, [r2, #0]
}
 80008b0:	e033      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
		if (IRQNumber <= 31) {
 80008b2:	79fb      	ldrb	r3, [r7, #7]
 80008b4:	2b1f      	cmp	r3, #31
 80008b6:	d80a      	bhi.n	80008ce <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 80008b8:	4b1d      	ldr	r3, [pc, #116]	@ (8000930 <GPIO_IRQInterruptConfig+0xfc>)
 80008ba:	681b      	ldr	r3, [r3, #0]
 80008bc:	79fa      	ldrb	r2, [r7, #7]
 80008be:	2101      	movs	r1, #1
 80008c0:	fa01 f202 	lsl.w	r2, r1, r2
 80008c4:	4611      	mov	r1, r2
 80008c6:	4a1a      	ldr	r2, [pc, #104]	@ (8000930 <GPIO_IRQInterruptConfig+0xfc>)
 80008c8:	430b      	orrs	r3, r1
 80008ca:	6013      	str	r3, [r2, #0]
}
 80008cc:	e025      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
		} else if (IRQNumber > 31 && IRQNumber < 64) {
 80008ce:	79fb      	ldrb	r3, [r7, #7]
 80008d0:	2b1f      	cmp	r3, #31
 80008d2:	d90f      	bls.n	80008f4 <GPIO_IRQInterruptConfig+0xc0>
 80008d4:	79fb      	ldrb	r3, [r7, #7]
 80008d6:	2b3f      	cmp	r3, #63	@ 0x3f
 80008d8:	d80c      	bhi.n	80008f4 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 80008da:	4b16      	ldr	r3, [pc, #88]	@ (8000934 <GPIO_IRQInterruptConfig+0x100>)
 80008dc:	681b      	ldr	r3, [r3, #0]
 80008de:	79fa      	ldrb	r2, [r7, #7]
 80008e0:	f002 021f 	and.w	r2, r2, #31
 80008e4:	2101      	movs	r1, #1
 80008e6:	fa01 f202 	lsl.w	r2, r1, r2
 80008ea:	4611      	mov	r1, r2
 80008ec:	4a11      	ldr	r2, [pc, #68]	@ (8000934 <GPIO_IRQInterruptConfig+0x100>)
 80008ee:	430b      	orrs	r3, r1
 80008f0:	6013      	str	r3, [r2, #0]
 80008f2:	e012      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
		} else if (IRQNumber >= 64 && IRQNumber < 96) {
 80008f4:	79fb      	ldrb	r3, [r7, #7]
 80008f6:	2b3f      	cmp	r3, #63	@ 0x3f
 80008f8:	d90f      	bls.n	800091a <GPIO_IRQInterruptConfig+0xe6>
 80008fa:	79fb      	ldrb	r3, [r7, #7]
 80008fc:	2b5f      	cmp	r3, #95	@ 0x5f
 80008fe:	d80c      	bhi.n	800091a <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << (IRQNumber % 32));
 8000900:	4b0d      	ldr	r3, [pc, #52]	@ (8000938 <GPIO_IRQInterruptConfig+0x104>)
 8000902:	681b      	ldr	r3, [r3, #0]
 8000904:	79fa      	ldrb	r2, [r7, #7]
 8000906:	f002 021f 	and.w	r2, r2, #31
 800090a:	2101      	movs	r1, #1
 800090c:	fa01 f202 	lsl.w	r2, r1, r2
 8000910:	4611      	mov	r1, r2
 8000912:	4a09      	ldr	r2, [pc, #36]	@ (8000938 <GPIO_IRQInterruptConfig+0x104>)
 8000914:	430b      	orrs	r3, r1
 8000916:	6013      	str	r3, [r2, #0]
}
 8000918:	e7ff      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
 800091a:	bf00      	nop
 800091c:	370c      	adds	r7, #12
 800091e:	46bd      	mov	sp, r7
 8000920:	bc80      	pop	{r7}
 8000922:	4770      	bx	lr
 8000924:	e000e100 	.word	0xe000e100
 8000928:	e000e104 	.word	0xe000e104
 800092c:	e000e108 	.word	0xe000e108
 8000930:	e000e180 	.word	0xe000e180
 8000934:	e000e184 	.word	0xe000e184
 8000938:	e000e188 	.word	0xe000e188

0800093c <GPIO_IRQPriorityConfig>:
 *
 * Notes:					NO_PR_BITS_IMPLEMENTED is MCU specific
 *
 */

void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint8_t IRQPriority) {
 800093c:	b480      	push	{r7}
 800093e:	b085      	sub	sp, #20
 8000940:	af00      	add	r7, sp, #0
 8000942:	4603      	mov	r3, r0
 8000944:	460a      	mov	r2, r1
 8000946:	71fb      	strb	r3, [r7, #7]
 8000948:	4613      	mov	r3, r2
 800094a:	71bb      	strb	r3, [r7, #6]
	// 1. find IPR register and bit to set
	uint8_t iprx = IRQNumber / 4;
 800094c:	79fb      	ldrb	r3, [r7, #7]
 800094e:	089b      	lsrs	r3, r3, #2
 8000950:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 8000952:	79fb      	ldrb	r3, [r7, #7]
 8000954:	f003 0303 	and.w	r3, r3, #3
 8000958:	73bb      	strb	r3, [r7, #14]

	uint32_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);	// first 4 bits of each priority register are not used
 800095a:	7bbb      	ldrb	r3, [r7, #14]
 800095c:	00db      	lsls	r3, r3, #3
 800095e:	3304      	adds	r3, #4
 8000960:	60bb      	str	r3, [r7, #8]

	*(NVIC_PR_BASEADDR + iprx) |= (IRQPriority << shift_amount);
 8000962:	7bfb      	ldrb	r3, [r7, #15]
 8000964:	009b      	lsls	r3, r3, #2
 8000966:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 800096a:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 800096e:	681a      	ldr	r2, [r3, #0]
 8000970:	79b9      	ldrb	r1, [r7, #6]
 8000972:	68bb      	ldr	r3, [r7, #8]
 8000974:	fa01 f303 	lsl.w	r3, r1, r3
 8000978:	4619      	mov	r1, r3
 800097a:	7bfb      	ldrb	r3, [r7, #15]
 800097c:	009b      	lsls	r3, r3, #2
 800097e:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000982:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000986:	430a      	orrs	r2, r1
 8000988:	601a      	str	r2, [r3, #0]
}
 800098a:	bf00      	nop
 800098c:	3714      	adds	r7, #20
 800098e:	46bd      	mov	sp, r7
 8000990:	bc80      	pop	{r7}
 8000992:	4770      	bx	lr

08000994 <GPIO_IRQHandling>:
 * Notes:					None
 *
 */

void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000994:	b480      	push	{r7}
 8000996:	b083      	sub	sp, #12
 8000998:	af00      	add	r7, sp, #0
 800099a:	4603      	mov	r3, r0
 800099c:	71fb      	strb	r3, [r7, #7]
	// Clear the EXTI pending register
	if (EXTI->PR & (1 << PinNumber)) {
 800099e:	4b0c      	ldr	r3, [pc, #48]	@ (80009d0 <GPIO_IRQHandling+0x3c>)
 80009a0:	695b      	ldr	r3, [r3, #20]
 80009a2:	79fa      	ldrb	r2, [r7, #7]
 80009a4:	2101      	movs	r1, #1
 80009a6:	fa01 f202 	lsl.w	r2, r1, r2
 80009aa:	4013      	ands	r3, r2
 80009ac:	2b00      	cmp	r3, #0
 80009ae:	d009      	beq.n	80009c4 <GPIO_IRQHandling+0x30>
		// clear by writing 1
		EXTI->PR |= (1 << PinNumber);
 80009b0:	4b07      	ldr	r3, [pc, #28]	@ (80009d0 <GPIO_IRQHandling+0x3c>)
 80009b2:	695b      	ldr	r3, [r3, #20]
 80009b4:	79fa      	ldrb	r2, [r7, #7]
 80009b6:	2101      	movs	r1, #1
 80009b8:	fa01 f202 	lsl.w	r2, r1, r2
 80009bc:	4611      	mov	r1, r2
 80009be:	4a04      	ldr	r2, [pc, #16]	@ (80009d0 <GPIO_IRQHandling+0x3c>)
 80009c0:	430b      	orrs	r3, r1
 80009c2:	6153      	str	r3, [r2, #20]
	}
}
 80009c4:	bf00      	nop
 80009c6:	370c      	adds	r7, #12
 80009c8:	46bd      	mov	sp, r7
 80009ca:	bc80      	pop	{r7}
 80009cc:	4770      	bx	lr
 80009ce:	bf00      	nop
 80009d0:	40013c00 	.word	0x40013c00

080009d4 <memset>:
 80009d4:	4402      	add	r2, r0
 80009d6:	4603      	mov	r3, r0
 80009d8:	4293      	cmp	r3, r2
 80009da:	d100      	bne.n	80009de <memset+0xa>
 80009dc:	4770      	bx	lr
 80009de:	f803 1b01 	strb.w	r1, [r3], #1
 80009e2:	e7f9      	b.n	80009d8 <memset+0x4>

080009e4 <__libc_init_array>:
 80009e4:	b570      	push	{r4, r5, r6, lr}
 80009e6:	4d0d      	ldr	r5, [pc, #52]	@ (8000a1c <__libc_init_array+0x38>)
 80009e8:	4c0d      	ldr	r4, [pc, #52]	@ (8000a20 <__libc_init_array+0x3c>)
 80009ea:	1b64      	subs	r4, r4, r5
 80009ec:	10a4      	asrs	r4, r4, #2
 80009ee:	2600      	movs	r6, #0
 80009f0:	42a6      	cmp	r6, r4
 80009f2:	d109      	bne.n	8000a08 <__libc_init_array+0x24>
 80009f4:	4d0b      	ldr	r5, [pc, #44]	@ (8000a24 <__libc_init_array+0x40>)
 80009f6:	4c0c      	ldr	r4, [pc, #48]	@ (8000a28 <__libc_init_array+0x44>)
 80009f8:	f000 f818 	bl	8000a2c <_init>
 80009fc:	1b64      	subs	r4, r4, r5
 80009fe:	10a4      	asrs	r4, r4, #2
 8000a00:	2600      	movs	r6, #0
 8000a02:	42a6      	cmp	r6, r4
 8000a04:	d105      	bne.n	8000a12 <__libc_init_array+0x2e>
 8000a06:	bd70      	pop	{r4, r5, r6, pc}
 8000a08:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a0c:	4798      	blx	r3
 8000a0e:	3601      	adds	r6, #1
 8000a10:	e7ee      	b.n	80009f0 <__libc_init_array+0xc>
 8000a12:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a16:	4798      	blx	r3
 8000a18:	3601      	adds	r6, #1
 8000a1a:	e7f2      	b.n	8000a02 <__libc_init_array+0x1e>
 8000a1c:	08000a44 	.word	0x08000a44
 8000a20:	08000a44 	.word	0x08000a44
 8000a24:	08000a44 	.word	0x08000a44
 8000a28:	08000a48 	.word	0x08000a48

08000a2c <_init>:
 8000a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a2e:	bf00      	nop
 8000a30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a32:	bc08      	pop	{r3}
 8000a34:	469e      	mov	lr, r3
 8000a36:	4770      	bx	lr

08000a38 <_fini>:
 8000a38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a3a:	bf00      	nop
 8000a3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a3e:	bc08      	pop	{r3}
 8000a40:	469e      	mov	lr, r3
 8000a42:	4770      	bx	lr
