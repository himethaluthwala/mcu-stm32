
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000700  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000888  08000890  00001890  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000888  08000888  00001890  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000888  08000888  00001890  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000888  08000890  00001890  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000888  08000888  00001888  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800088c  0800088c  0000188c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001890  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001890  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00001890  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009d0  00000000  00000000  000018ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000294  00000000  00000000  0000228a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  00002520  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000007e  00000000  00000000  000025d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000138d  00000000  00000000  00002656  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000dd5  00000000  00000000  000039e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005422  00000000  00000000  000047b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00009bda  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000224  00000000  00000000  00009c20  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006a  00000000  00000000  00009e44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000870 	.word	0x08000870

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000870 	.word	0x08000870

080001c8 <delay>:

#define BTN_PRESSED		1


void delay(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 250000; i++);
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a04      	ldr	r2, [pc, #16]	@ (80001f0 <delay+0x28>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d9f8      	bls.n	80001d4 <delay+0xc>
}
 80001e2:	bf00      	nop
 80001e4:	bf00      	nop
 80001e6:	370c      	adds	r7, #12
 80001e8:	46bd      	mov	sp, r7
 80001ea:	bc80      	pop	{r7}
 80001ec:	4770      	bx	lr
 80001ee:	bf00      	nop
 80001f0:	0003d08f 	.word	0x0003d08f

080001f4 <main>:


int main(void)
{
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b086      	sub	sp, #24
 80001f8:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIO_LED, GPIO_Btn;

	// green LED connected to PD12
	GPIO_LED.pGPIOx = GPIOD;
 80001fa:	4b1a      	ldr	r3, [pc, #104]	@ (8000264 <main+0x70>)
 80001fc:	60fb      	str	r3, [r7, #12]
	GPIO_LED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 80001fe:	230c      	movs	r3, #12
 8000200:	743b      	strb	r3, [r7, #16]
	GPIO_LED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000202:	2301      	movs	r3, #1
 8000204:	747b      	strb	r3, [r7, #17]
	GPIO_LED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000206:	2302      	movs	r3, #2
 8000208:	74bb      	strb	r3, [r7, #18]
	GPIO_LED.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800020a:	2300      	movs	r3, #0
 800020c:	753b      	strb	r3, [r7, #20]
	GPIO_LED.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800020e:	2300      	movs	r3, #0
 8000210:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 8000212:	2101      	movs	r1, #1
 8000214:	4813      	ldr	r0, [pc, #76]	@ (8000264 <main+0x70>)
 8000216:	f000 f9f5 	bl	8000604 <GPIO_PeriClockControl>
	GPIO_Init(&GPIO_LED);
 800021a:	f107 030c 	add.w	r3, r7, #12
 800021e:	4618      	mov	r0, r3
 8000220:	f000 f84e 	bl	80002c0 <GPIO_Init>

	// user button connected to PA0
	GPIO_Btn.pGPIOx = GPIOA;
 8000224:	4b10      	ldr	r3, [pc, #64]	@ (8000268 <main+0x74>)
 8000226:	603b      	str	r3, [r7, #0]
	GPIO_Btn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000228:	2300      	movs	r3, #0
 800022a:	713b      	strb	r3, [r7, #4]
	GPIO_Btn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 800022c:	2300      	movs	r3, #0
 800022e:	717b      	strb	r3, [r7, #5]
	GPIO_Btn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000230:	2302      	movs	r3, #2
 8000232:	71bb      	strb	r3, [r7, #6]
	GPIO_Btn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000234:	2300      	movs	r3, #0
 8000236:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000238:	2101      	movs	r1, #1
 800023a:	480b      	ldr	r0, [pc, #44]	@ (8000268 <main+0x74>)
 800023c:	f000 f9e2 	bl	8000604 <GPIO_PeriClockControl>
	GPIO_Init(&GPIO_Btn);
 8000240:	463b      	mov	r3, r7
 8000242:	4618      	mov	r0, r3
 8000244:	f000 f83c 	bl	80002c0 <GPIO_Init>

	while (1)
	{
		if (GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0) == BTN_PRESSED)		// pin pulled to high (1) - this is hardware dependent
 8000248:	2100      	movs	r1, #0
 800024a:	4807      	ldr	r0, [pc, #28]	@ (8000268 <main+0x74>)
 800024c:	f000 fac2 	bl	80007d4 <GPIO_ReadFromInputPin>
 8000250:	4603      	mov	r3, r0
 8000252:	2b01      	cmp	r3, #1
 8000254:	d1f8      	bne.n	8000248 <main+0x54>
		{
			delay();		// we include delay to avoid button de-bouncing issues
 8000256:	f7ff ffb7 	bl	80001c8 <delay>
			GPIO_ToggleOuputPin(GPIOD, GPIO_PIN_NO_12);
 800025a:	210c      	movs	r1, #12
 800025c:	4801      	ldr	r0, [pc, #4]	@ (8000264 <main+0x70>)
 800025e:	f000 face 	bl	80007fe <GPIO_ToggleOuputPin>
		if (GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0) == BTN_PRESSED)		// pin pulled to high (1) - this is hardware dependent
 8000262:	e7f1      	b.n	8000248 <main+0x54>
 8000264:	40020c00 	.word	0x40020c00
 8000268:	40020000 	.word	0x40020000

0800026c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800026c:	480d      	ldr	r0, [pc, #52]	@ (80002a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800026e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000270:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000274:	480c      	ldr	r0, [pc, #48]	@ (80002a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000276:	490d      	ldr	r1, [pc, #52]	@ (80002ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000278:	4a0d      	ldr	r2, [pc, #52]	@ (80002b0 <LoopForever+0xe>)
  movs r3, #0
 800027a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800027c:	e002      	b.n	8000284 <LoopCopyDataInit>

0800027e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800027e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000280:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000282:	3304      	adds	r3, #4

08000284 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000284:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000286:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000288:	d3f9      	bcc.n	800027e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028a:	4a0a      	ldr	r2, [pc, #40]	@ (80002b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800028c:	4c0a      	ldr	r4, [pc, #40]	@ (80002b8 <LoopForever+0x16>)
  movs r3, #0
 800028e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000290:	e001      	b.n	8000296 <LoopFillZerobss>

08000292 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000292:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000294:	3204      	adds	r2, #4

08000296 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000296:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000298:	d3fb      	bcc.n	8000292 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800029a:	f000 fac5 	bl	8000828 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800029e:	f7ff ffa9 	bl	80001f4 <main>

080002a2 <LoopForever>:

LoopForever:
  b LoopForever
 80002a2:	e7fe      	b.n	80002a2 <LoopForever>
  ldr   r0, =_estack
 80002a4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ac:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b0:	08000890 	.word	0x08000890
  ldr r2, =_sbss
 80002b4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b8:	2000001c 	.word	0x2000001c

080002bc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002bc:	e7fe      	b.n	80002bc <ADC_IRQHandler>
	...

080002c0 <GPIO_Init>:
 * Notes:					None
 *
 */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80002c0:	b480      	push	{r7}
 80002c2:	b087      	sub	sp, #28
 80002c4:	af00      	add	r7, sp, #0
 80002c6:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80002c8:	2300      	movs	r3, #0
 80002ca:	617b      	str	r3, [r7, #20]

	//1. configure GPIO pin mode
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)		// non-interrupt mode
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	795b      	ldrb	r3, [r3, #5]
 80002d0:	2b03      	cmp	r3, #3
 80002d2:	d81f      	bhi.n	8000314 <GPIO_Init+0x54>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002d4:	687b      	ldr	r3, [r7, #4]
 80002d6:	795b      	ldrb	r3, [r3, #5]
 80002d8:	461a      	mov	r2, r3
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	791b      	ldrb	r3, [r3, #4]
 80002de:	005b      	lsls	r3, r3, #1
 80002e0:	fa02 f303 	lsl.w	r3, r2, r3
 80002e4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);		//clearing bit fields
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	681a      	ldr	r2, [r3, #0]
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	791b      	ldrb	r3, [r3, #4]
 80002f0:	4619      	mov	r1, r3
 80002f2:	2303      	movs	r3, #3
 80002f4:	408b      	lsls	r3, r1
 80002f6:	43db      	mvns	r3, r3
 80002f8:	4619      	mov	r1, r3
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	400a      	ands	r2, r1
 8000300:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	681b      	ldr	r3, [r3, #0]
 8000306:	6819      	ldr	r1, [r3, #0]
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	681b      	ldr	r3, [r3, #0]
 800030c:	697a      	ldr	r2, [r7, #20]
 800030e:	430a      	orrs	r2, r1
 8000310:	601a      	str	r2, [r3, #0]
 8000312:	e0d1      	b.n	80004b8 <GPIO_Init+0x1f8>
	}
	else		// interrupt mode
	{
		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_FT) {
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	795b      	ldrb	r3, [r3, #5]
 8000318:	2b04      	cmp	r3, #4
 800031a:	d817      	bhi.n	800034c <GPIO_Init+0x8c>
			// configure the FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800031c:	4b4a      	ldr	r3, [pc, #296]	@ (8000448 <GPIO_Init+0x188>)
 800031e:	68db      	ldr	r3, [r3, #12]
 8000320:	687a      	ldr	r2, [r7, #4]
 8000322:	7912      	ldrb	r2, [r2, #4]
 8000324:	4611      	mov	r1, r2
 8000326:	2201      	movs	r2, #1
 8000328:	408a      	lsls	r2, r1
 800032a:	4611      	mov	r1, r2
 800032c:	4a46      	ldr	r2, [pc, #280]	@ (8000448 <GPIO_Init+0x188>)
 800032e:	430b      	orrs	r3, r1
 8000330:	60d3      	str	r3, [r2, #12]
			// clear corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000332:	4b45      	ldr	r3, [pc, #276]	@ (8000448 <GPIO_Init+0x188>)
 8000334:	689b      	ldr	r3, [r3, #8]
 8000336:	687a      	ldr	r2, [r7, #4]
 8000338:	7912      	ldrb	r2, [r2, #4]
 800033a:	4611      	mov	r1, r2
 800033c:	2201      	movs	r2, #1
 800033e:	408a      	lsls	r2, r1
 8000340:	43d2      	mvns	r2, r2
 8000342:	4611      	mov	r1, r2
 8000344:	4a40      	ldr	r2, [pc, #256]	@ (8000448 <GPIO_Init+0x188>)
 8000346:	400b      	ands	r3, r1
 8000348:	6093      	str	r3, [r2, #8]
 800034a:	e035      	b.n	80003b8 <GPIO_Init+0xf8>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RT) {
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	795b      	ldrb	r3, [r3, #5]
 8000350:	2b05      	cmp	r3, #5
 8000352:	d817      	bhi.n	8000384 <GPIO_Init+0xc4>
			// configure the RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000354:	4b3c      	ldr	r3, [pc, #240]	@ (8000448 <GPIO_Init+0x188>)
 8000356:	689b      	ldr	r3, [r3, #8]
 8000358:	687a      	ldr	r2, [r7, #4]
 800035a:	7912      	ldrb	r2, [r2, #4]
 800035c:	4611      	mov	r1, r2
 800035e:	2201      	movs	r2, #1
 8000360:	408a      	lsls	r2, r1
 8000362:	4611      	mov	r1, r2
 8000364:	4a38      	ldr	r2, [pc, #224]	@ (8000448 <GPIO_Init+0x188>)
 8000366:	430b      	orrs	r3, r1
 8000368:	6093      	str	r3, [r2, #8]
			// clear corresponding FTSR bit
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800036a:	4b37      	ldr	r3, [pc, #220]	@ (8000448 <GPIO_Init+0x188>)
 800036c:	68db      	ldr	r3, [r3, #12]
 800036e:	687a      	ldr	r2, [r7, #4]
 8000370:	7912      	ldrb	r2, [r2, #4]
 8000372:	4611      	mov	r1, r2
 8000374:	2201      	movs	r2, #1
 8000376:	408a      	lsls	r2, r1
 8000378:	43d2      	mvns	r2, r2
 800037a:	4611      	mov	r1, r2
 800037c:	4a32      	ldr	r2, [pc, #200]	@ (8000448 <GPIO_Init+0x188>)
 800037e:	400b      	ands	r3, r1
 8000380:	60d3      	str	r3, [r2, #12]
 8000382:	e019      	b.n	80003b8 <GPIO_Init+0xf8>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RFT) {
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	795b      	ldrb	r3, [r3, #5]
 8000388:	2b06      	cmp	r3, #6
 800038a:	d815      	bhi.n	80003b8 <GPIO_Init+0xf8>
			// configure both registers
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800038c:	4b2e      	ldr	r3, [pc, #184]	@ (8000448 <GPIO_Init+0x188>)
 800038e:	68db      	ldr	r3, [r3, #12]
 8000390:	687a      	ldr	r2, [r7, #4]
 8000392:	7912      	ldrb	r2, [r2, #4]
 8000394:	4611      	mov	r1, r2
 8000396:	2201      	movs	r2, #1
 8000398:	408a      	lsls	r2, r1
 800039a:	4611      	mov	r1, r2
 800039c:	4a2a      	ldr	r2, [pc, #168]	@ (8000448 <GPIO_Init+0x188>)
 800039e:	430b      	orrs	r3, r1
 80003a0:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003a2:	4b29      	ldr	r3, [pc, #164]	@ (8000448 <GPIO_Init+0x188>)
 80003a4:	689b      	ldr	r3, [r3, #8]
 80003a6:	687a      	ldr	r2, [r7, #4]
 80003a8:	7912      	ldrb	r2, [r2, #4]
 80003aa:	4611      	mov	r1, r2
 80003ac:	2201      	movs	r2, #1
 80003ae:	408a      	lsls	r2, r1
 80003b0:	4611      	mov	r1, r2
 80003b2:	4a25      	ldr	r2, [pc, #148]	@ (8000448 <GPIO_Init+0x188>)
 80003b4:	430b      	orrs	r3, r1
 80003b6:	6093      	str	r3, [r2, #8]
		}

		// configure GPIO Port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;		// index for EXTI control register
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	791b      	ldrb	r3, [r3, #4]
 80003bc:	089b      	lsrs	r3, r3, #2
 80003be:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;		// offset within register
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	791b      	ldrb	r3, [r3, #4]
 80003c4:	f003 0303 	and.w	r3, r3, #3
 80003c8:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);		// GPIO port code
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	681b      	ldr	r3, [r3, #0]
 80003ce:	4a1f      	ldr	r2, [pc, #124]	@ (800044c <GPIO_Init+0x18c>)
 80003d0:	4293      	cmp	r3, r2
 80003d2:	d04d      	beq.n	8000470 <GPIO_Init+0x1b0>
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	4a1d      	ldr	r2, [pc, #116]	@ (8000450 <GPIO_Init+0x190>)
 80003da:	4293      	cmp	r3, r2
 80003dc:	d032      	beq.n	8000444 <GPIO_Init+0x184>
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	4a1c      	ldr	r2, [pc, #112]	@ (8000454 <GPIO_Init+0x194>)
 80003e4:	4293      	cmp	r3, r2
 80003e6:	d02b      	beq.n	8000440 <GPIO_Init+0x180>
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	4a1a      	ldr	r2, [pc, #104]	@ (8000458 <GPIO_Init+0x198>)
 80003ee:	4293      	cmp	r3, r2
 80003f0:	d024      	beq.n	800043c <GPIO_Init+0x17c>
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	4a19      	ldr	r2, [pc, #100]	@ (800045c <GPIO_Init+0x19c>)
 80003f8:	4293      	cmp	r3, r2
 80003fa:	d01d      	beq.n	8000438 <GPIO_Init+0x178>
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	4a17      	ldr	r2, [pc, #92]	@ (8000460 <GPIO_Init+0x1a0>)
 8000402:	4293      	cmp	r3, r2
 8000404:	d016      	beq.n	8000434 <GPIO_Init+0x174>
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	4a16      	ldr	r2, [pc, #88]	@ (8000464 <GPIO_Init+0x1a4>)
 800040c:	4293      	cmp	r3, r2
 800040e:	d00f      	beq.n	8000430 <GPIO_Init+0x170>
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	4a14      	ldr	r2, [pc, #80]	@ (8000468 <GPIO_Init+0x1a8>)
 8000416:	4293      	cmp	r3, r2
 8000418:	d008      	beq.n	800042c <GPIO_Init+0x16c>
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	4a13      	ldr	r2, [pc, #76]	@ (800046c <GPIO_Init+0x1ac>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d101      	bne.n	8000428 <GPIO_Init+0x168>
 8000424:	2308      	movs	r3, #8
 8000426:	e024      	b.n	8000472 <GPIO_Init+0x1b2>
 8000428:	2300      	movs	r3, #0
 800042a:	e022      	b.n	8000472 <GPIO_Init+0x1b2>
 800042c:	2307      	movs	r3, #7
 800042e:	e020      	b.n	8000472 <GPIO_Init+0x1b2>
 8000430:	2306      	movs	r3, #6
 8000432:	e01e      	b.n	8000472 <GPIO_Init+0x1b2>
 8000434:	2305      	movs	r3, #5
 8000436:	e01c      	b.n	8000472 <GPIO_Init+0x1b2>
 8000438:	2304      	movs	r3, #4
 800043a:	e01a      	b.n	8000472 <GPIO_Init+0x1b2>
 800043c:	2303      	movs	r3, #3
 800043e:	e018      	b.n	8000472 <GPIO_Init+0x1b2>
 8000440:	2302      	movs	r3, #2
 8000442:	e016      	b.n	8000472 <GPIO_Init+0x1b2>
 8000444:	2301      	movs	r3, #1
 8000446:	e014      	b.n	8000472 <GPIO_Init+0x1b2>
 8000448:	40013c00 	.word	0x40013c00
 800044c:	40020000 	.word	0x40020000
 8000450:	40020400 	.word	0x40020400
 8000454:	40020800 	.word	0x40020800
 8000458:	40020c00 	.word	0x40020c00
 800045c:	40021000 	.word	0x40021000
 8000460:	40021400 	.word	0x40021400
 8000464:	40021800 	.word	0x40021800
 8000468:	40021c00 	.word	0x40021c00
 800046c:	40022000 	.word	0x40022000
 8000470:	2300      	movs	r3, #0
 8000472:	747b      	strb	r3, [r7, #17]

		SYSCFG_PCLK_EN();		// enable SYSCFG peripheral clock
 8000474:	4b60      	ldr	r3, [pc, #384]	@ (80005f8 <GPIO_Init+0x338>)
 8000476:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000478:	4a5f      	ldr	r2, [pc, #380]	@ (80005f8 <GPIO_Init+0x338>)
 800047a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800047e:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] |= (portcode << (temp2 * 4));
 8000480:	4a5e      	ldr	r2, [pc, #376]	@ (80005fc <GPIO_Init+0x33c>)
 8000482:	7cfb      	ldrb	r3, [r7, #19]
 8000484:	3302      	adds	r3, #2
 8000486:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800048a:	7c79      	ldrb	r1, [r7, #17]
 800048c:	7cbb      	ldrb	r3, [r7, #18]
 800048e:	009b      	lsls	r3, r3, #2
 8000490:	fa01 f303 	lsl.w	r3, r1, r3
 8000494:	4618      	mov	r0, r3
 8000496:	4959      	ldr	r1, [pc, #356]	@ (80005fc <GPIO_Init+0x33c>)
 8000498:	7cfb      	ldrb	r3, [r7, #19]
 800049a:	4302      	orrs	r2, r0
 800049c:	3302      	adds	r3, #2
 800049e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		// enable EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004a2:	4b57      	ldr	r3, [pc, #348]	@ (8000600 <GPIO_Init+0x340>)
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	687a      	ldr	r2, [r7, #4]
 80004a8:	7912      	ldrb	r2, [r2, #4]
 80004aa:	4611      	mov	r1, r2
 80004ac:	2201      	movs	r2, #1
 80004ae:	408a      	lsls	r2, r1
 80004b0:	4611      	mov	r1, r2
 80004b2:	4a53      	ldr	r2, [pc, #332]	@ (8000600 <GPIO_Init+0x340>)
 80004b4:	430b      	orrs	r3, r1
 80004b6:	6013      	str	r3, [r2, #0]


	}

	temp = 0;
 80004b8:	2300      	movs	r3, #0
 80004ba:	617b      	str	r3, [r7, #20]

	//2. configure pin output speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	799b      	ldrb	r3, [r3, #6]
 80004c0:	461a      	mov	r2, r3
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	791b      	ldrb	r3, [r3, #4]
 80004c6:	005b      	lsls	r3, r3, #1
 80004c8:	fa02 f303 	lsl.w	r3, r2, r3
 80004cc:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	689a      	ldr	r2, [r3, #8]
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	791b      	ldrb	r3, [r3, #4]
 80004d8:	4619      	mov	r1, r3
 80004da:	2303      	movs	r3, #3
 80004dc:	408b      	lsls	r3, r1
 80004de:	43db      	mvns	r3, r3
 80004e0:	4619      	mov	r1, r3
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	400a      	ands	r2, r1
 80004e8:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	6899      	ldr	r1, [r3, #8]
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	697a      	ldr	r2, [r7, #20]
 80004f6:	430a      	orrs	r2, r1
 80004f8:	609a      	str	r2, [r3, #8]

	temp = 0;
 80004fa:	2300      	movs	r3, #0
 80004fc:	617b      	str	r3, [r7, #20]

	//3. configure the pull-up / pull-down settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	79db      	ldrb	r3, [r3, #7]
 8000502:	461a      	mov	r2, r3
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	791b      	ldrb	r3, [r3, #4]
 8000508:	005b      	lsls	r3, r3, #1
 800050a:	fa02 f303 	lsl.w	r3, r2, r3
 800050e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	68da      	ldr	r2, [r3, #12]
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	791b      	ldrb	r3, [r3, #4]
 800051a:	4619      	mov	r1, r3
 800051c:	2303      	movs	r3, #3
 800051e:	408b      	lsls	r3, r1
 8000520:	43db      	mvns	r3, r3
 8000522:	4619      	mov	r1, r3
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	400a      	ands	r2, r1
 800052a:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	68d9      	ldr	r1, [r3, #12]
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	697a      	ldr	r2, [r7, #20]
 8000538:	430a      	orrs	r2, r1
 800053a:	60da      	str	r2, [r3, #12]

	temp = 0;
 800053c:	2300      	movs	r3, #0
 800053e:	617b      	str	r3, [r7, #20]

	//4. configure the output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	7a1b      	ldrb	r3, [r3, #8]
 8000544:	461a      	mov	r2, r3
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	791b      	ldrb	r3, [r3, #4]
 800054a:	fa02 f303 	lsl.w	r3, r2, r3
 800054e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	685a      	ldr	r2, [r3, #4]
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	791b      	ldrb	r3, [r3, #4]
 800055a:	4619      	mov	r1, r3
 800055c:	2301      	movs	r3, #1
 800055e:	408b      	lsls	r3, r1
 8000560:	43db      	mvns	r3, r3
 8000562:	4619      	mov	r1, r3
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	400a      	ands	r2, r1
 800056a:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	6859      	ldr	r1, [r3, #4]
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	681b      	ldr	r3, [r3, #0]
 8000576:	697a      	ldr	r2, [r7, #20]
 8000578:	430a      	orrs	r2, r1
 800057a:	605a      	str	r2, [r3, #4]

	temp = 0;
 800057c:	2300      	movs	r3, #0
 800057e:	617b      	str	r3, [r7, #20]

	//5. configure the alternate functionality
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode == GPIO_MODE_ALTFN)
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	7a5b      	ldrb	r3, [r3, #9]
 8000584:	2b02      	cmp	r3, #2
 8000586:	d131      	bne.n	80005ec <GPIO_Init+0x32c>
	{
		// configure the alternate function mode
		uint8_t temp3, temp4;

		temp3 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;		// alternate function low or high register
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	791b      	ldrb	r3, [r3, #4]
 800058c:	08db      	lsrs	r3, r3, #3
 800058e:	743b      	strb	r3, [r7, #16]
		temp4 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;		// offset in the register
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	791b      	ldrb	r3, [r3, #4]
 8000594:	f003 0307 	and.w	r3, r3, #7
 8000598:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp3] &= ~(0xF << (4 * temp4));
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	681b      	ldr	r3, [r3, #0]
 800059e:	7c3a      	ldrb	r2, [r7, #16]
 80005a0:	3208      	adds	r2, #8
 80005a2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005a6:	7bfb      	ldrb	r3, [r7, #15]
 80005a8:	009b      	lsls	r3, r3, #2
 80005aa:	220f      	movs	r2, #15
 80005ac:	fa02 f303 	lsl.w	r3, r2, r3
 80005b0:	43db      	mvns	r3, r3
 80005b2:	4618      	mov	r0, r3
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	7c3a      	ldrb	r2, [r7, #16]
 80005ba:	4001      	ands	r1, r0
 80005bc:	3208      	adds	r2, #8
 80005be:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp3] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp4));
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	7c3a      	ldrb	r2, [r7, #16]
 80005c8:	3208      	adds	r2, #8
 80005ca:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	7a5b      	ldrb	r3, [r3, #9]
 80005d2:	461a      	mov	r2, r3
 80005d4:	7bfb      	ldrb	r3, [r7, #15]
 80005d6:	009b      	lsls	r3, r3, #2
 80005d8:	fa02 f303 	lsl.w	r3, r2, r3
 80005dc:	4618      	mov	r0, r3
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	7c3a      	ldrb	r2, [r7, #16]
 80005e4:	4301      	orrs	r1, r0
 80005e6:	3208      	adds	r2, #8
 80005e8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80005ec:	bf00      	nop
 80005ee:	371c      	adds	r7, #28
 80005f0:	46bd      	mov	sp, r7
 80005f2:	bc80      	pop	{r7}
 80005f4:	4770      	bx	lr
 80005f6:	bf00      	nop
 80005f8:	40023800 	.word	0x40023800
 80005fc:	40013800 	.word	0x40013800
 8000600:	40013c00 	.word	0x40013c00

08000604 <GPIO_PeriClockControl>:
 * Notes:					None
 *
 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000604:	b480      	push	{r7}
 8000606:	b083      	sub	sp, #12
 8000608:	af00      	add	r7, sp, #0
 800060a:	6078      	str	r0, [r7, #4]
 800060c:	460b      	mov	r3, r1
 800060e:	70fb      	strb	r3, [r7, #3]

	if (EnorDi == ENABLE)
 8000610:	78fb      	ldrb	r3, [r7, #3]
 8000612:	2b01      	cmp	r3, #1
 8000614:	d162      	bne.n	80006dc <GPIO_PeriClockControl+0xd8>
	{
		if (pGPIOx == GPIOA)
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	4a64      	ldr	r2, [pc, #400]	@ (80007ac <GPIO_PeriClockControl+0x1a8>)
 800061a:	4293      	cmp	r3, r2
 800061c:	d106      	bne.n	800062c <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 800061e:	4b64      	ldr	r3, [pc, #400]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000620:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000622:	4a63      	ldr	r2, [pc, #396]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000624:	f043 0301 	orr.w	r3, r3, #1
 8000628:	6313      	str	r3, [r2, #48]	@ 0x30
		else if (pGPIOx == GPIOI)
		{
			GPIOI_PCLK_DI();
		}
	}
}
 800062a:	e0b9      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB)
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	4a61      	ldr	r2, [pc, #388]	@ (80007b4 <GPIO_PeriClockControl+0x1b0>)
 8000630:	4293      	cmp	r3, r2
 8000632:	d106      	bne.n	8000642 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000634:	4b5e      	ldr	r3, [pc, #376]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000636:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000638:	4a5d      	ldr	r2, [pc, #372]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 800063a:	f043 0302 	orr.w	r3, r3, #2
 800063e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000640:	e0ae      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC)
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	4a5c      	ldr	r2, [pc, #368]	@ (80007b8 <GPIO_PeriClockControl+0x1b4>)
 8000646:	4293      	cmp	r3, r2
 8000648:	d106      	bne.n	8000658 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800064a:	4b59      	ldr	r3, [pc, #356]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 800064c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800064e:	4a58      	ldr	r2, [pc, #352]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000650:	f043 0304 	orr.w	r3, r3, #4
 8000654:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000656:	e0a3      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD)
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	4a58      	ldr	r2, [pc, #352]	@ (80007bc <GPIO_PeriClockControl+0x1b8>)
 800065c:	4293      	cmp	r3, r2
 800065e:	d106      	bne.n	800066e <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000660:	4b53      	ldr	r3, [pc, #332]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000662:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000664:	4a52      	ldr	r2, [pc, #328]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000666:	f043 0308 	orr.w	r3, r3, #8
 800066a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800066c:	e098      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE)
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	4a53      	ldr	r2, [pc, #332]	@ (80007c0 <GPIO_PeriClockControl+0x1bc>)
 8000672:	4293      	cmp	r3, r2
 8000674:	d106      	bne.n	8000684 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000676:	4b4e      	ldr	r3, [pc, #312]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000678:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800067a:	4a4d      	ldr	r2, [pc, #308]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 800067c:	f043 0310 	orr.w	r3, r3, #16
 8000680:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000682:	e08d      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF)
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	4a4f      	ldr	r2, [pc, #316]	@ (80007c4 <GPIO_PeriClockControl+0x1c0>)
 8000688:	4293      	cmp	r3, r2
 800068a:	d106      	bne.n	800069a <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 800068c:	4b48      	ldr	r3, [pc, #288]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 800068e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000690:	4a47      	ldr	r2, [pc, #284]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000692:	f043 0320 	orr.w	r3, r3, #32
 8000696:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000698:	e082      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG)
 800069a:	687b      	ldr	r3, [r7, #4]
 800069c:	4a4a      	ldr	r2, [pc, #296]	@ (80007c8 <GPIO_PeriClockControl+0x1c4>)
 800069e:	4293      	cmp	r3, r2
 80006a0:	d106      	bne.n	80006b0 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80006a2:	4b43      	ldr	r3, [pc, #268]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 80006a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006a6:	4a42      	ldr	r2, [pc, #264]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 80006a8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80006ac:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006ae:	e077      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH)
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	4a46      	ldr	r2, [pc, #280]	@ (80007cc <GPIO_PeriClockControl+0x1c8>)
 80006b4:	4293      	cmp	r3, r2
 80006b6:	d106      	bne.n	80006c6 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80006b8:	4b3d      	ldr	r3, [pc, #244]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 80006ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006bc:	4a3c      	ldr	r2, [pc, #240]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 80006be:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80006c2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006c4:	e06c      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI)
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	4a41      	ldr	r2, [pc, #260]	@ (80007d0 <GPIO_PeriClockControl+0x1cc>)
 80006ca:	4293      	cmp	r3, r2
 80006cc:	d168      	bne.n	80007a0 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 80006ce:	4b38      	ldr	r3, [pc, #224]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 80006d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006d2:	4a37      	ldr	r2, [pc, #220]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 80006d4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80006d8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006da:	e061      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		if (pGPIOx == GPIOA)
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	4a33      	ldr	r2, [pc, #204]	@ (80007ac <GPIO_PeriClockControl+0x1a8>)
 80006e0:	4293      	cmp	r3, r2
 80006e2:	d106      	bne.n	80006f2 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80006e4:	4b32      	ldr	r3, [pc, #200]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 80006e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006e8:	4a31      	ldr	r2, [pc, #196]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 80006ea:	f023 0301 	bic.w	r3, r3, #1
 80006ee:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80006f0:	e056      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB)
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	4a2f      	ldr	r2, [pc, #188]	@ (80007b4 <GPIO_PeriClockControl+0x1b0>)
 80006f6:	4293      	cmp	r3, r2
 80006f8:	d106      	bne.n	8000708 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 80006fa:	4b2d      	ldr	r3, [pc, #180]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 80006fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006fe:	4a2c      	ldr	r2, [pc, #176]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000700:	f023 0302 	bic.w	r3, r3, #2
 8000704:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000706:	e04b      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC)
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	4a2b      	ldr	r2, [pc, #172]	@ (80007b8 <GPIO_PeriClockControl+0x1b4>)
 800070c:	4293      	cmp	r3, r2
 800070e:	d106      	bne.n	800071e <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 8000710:	4b27      	ldr	r3, [pc, #156]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000712:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000714:	4a26      	ldr	r2, [pc, #152]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000716:	f023 0304 	bic.w	r3, r3, #4
 800071a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800071c:	e040      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD)
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	4a26      	ldr	r2, [pc, #152]	@ (80007bc <GPIO_PeriClockControl+0x1b8>)
 8000722:	4293      	cmp	r3, r2
 8000724:	d106      	bne.n	8000734 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 8000726:	4b22      	ldr	r3, [pc, #136]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000728:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800072a:	4a21      	ldr	r2, [pc, #132]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 800072c:	f023 0308 	bic.w	r3, r3, #8
 8000730:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000732:	e035      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE)
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	4a22      	ldr	r2, [pc, #136]	@ (80007c0 <GPIO_PeriClockControl+0x1bc>)
 8000738:	4293      	cmp	r3, r2
 800073a:	d106      	bne.n	800074a <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 800073c:	4b1c      	ldr	r3, [pc, #112]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 800073e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000740:	4a1b      	ldr	r2, [pc, #108]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000742:	f023 0310 	bic.w	r3, r3, #16
 8000746:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000748:	e02a      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF)
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	4a1d      	ldr	r2, [pc, #116]	@ (80007c4 <GPIO_PeriClockControl+0x1c0>)
 800074e:	4293      	cmp	r3, r2
 8000750:	d106      	bne.n	8000760 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 8000752:	4b17      	ldr	r3, [pc, #92]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000754:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000756:	4a16      	ldr	r2, [pc, #88]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000758:	f023 0320 	bic.w	r3, r3, #32
 800075c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800075e:	e01f      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG)
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	4a19      	ldr	r2, [pc, #100]	@ (80007c8 <GPIO_PeriClockControl+0x1c4>)
 8000764:	4293      	cmp	r3, r2
 8000766:	d106      	bne.n	8000776 <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 8000768:	4b11      	ldr	r3, [pc, #68]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 800076a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800076c:	4a10      	ldr	r2, [pc, #64]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 800076e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000772:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000774:	e014      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH)
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	4a14      	ldr	r2, [pc, #80]	@ (80007cc <GPIO_PeriClockControl+0x1c8>)
 800077a:	4293      	cmp	r3, r2
 800077c:	d106      	bne.n	800078c <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 800077e:	4b0c      	ldr	r3, [pc, #48]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000780:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000782:	4a0b      	ldr	r2, [pc, #44]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000784:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000788:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800078a:	e009      	b.n	80007a0 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI)
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	4a10      	ldr	r2, [pc, #64]	@ (80007d0 <GPIO_PeriClockControl+0x1cc>)
 8000790:	4293      	cmp	r3, r2
 8000792:	d105      	bne.n	80007a0 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000794:	4b06      	ldr	r3, [pc, #24]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 8000796:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000798:	4a05      	ldr	r2, [pc, #20]	@ (80007b0 <GPIO_PeriClockControl+0x1ac>)
 800079a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800079e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80007a0:	bf00      	nop
 80007a2:	370c      	adds	r7, #12
 80007a4:	46bd      	mov	sp, r7
 80007a6:	bc80      	pop	{r7}
 80007a8:	4770      	bx	lr
 80007aa:	bf00      	nop
 80007ac:	40020000 	.word	0x40020000
 80007b0:	40023800 	.word	0x40023800
 80007b4:	40020400 	.word	0x40020400
 80007b8:	40020800 	.word	0x40020800
 80007bc:	40020c00 	.word	0x40020c00
 80007c0:	40021000 	.word	0x40021000
 80007c4:	40021400 	.word	0x40021400
 80007c8:	40021800 	.word	0x40021800
 80007cc:	40021c00 	.word	0x40021c00
 80007d0:	40022000 	.word	0x40022000

080007d4 <GPIO_ReadFromInputPin>:
 * Notes:					None
 *
 */

uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80007d4:	b480      	push	{r7}
 80007d6:	b085      	sub	sp, #20
 80007d8:	af00      	add	r7, sp, #0
 80007da:	6078      	str	r0, [r7, #4]
 80007dc:	460b      	mov	r3, r1
 80007de:	70fb      	strb	r3, [r7, #3]
	uint8_t value;

	value = (uint8_t) ((pGPIOx->IDR >> PinNumber) & 0x00000001);		//shift the desired bit to the first position and mask all other bits
 80007e0:	687b      	ldr	r3, [r7, #4]
 80007e2:	691a      	ldr	r2, [r3, #16]
 80007e4:	78fb      	ldrb	r3, [r7, #3]
 80007e6:	fa22 f303 	lsr.w	r3, r2, r3
 80007ea:	b2db      	uxtb	r3, r3
 80007ec:	f003 0301 	and.w	r3, r3, #1
 80007f0:	73fb      	strb	r3, [r7, #15]

	return value;
 80007f2:	7bfb      	ldrb	r3, [r7, #15]
}
 80007f4:	4618      	mov	r0, r3
 80007f6:	3714      	adds	r7, #20
 80007f8:	46bd      	mov	sp, r7
 80007fa:	bc80      	pop	{r7}
 80007fc:	4770      	bx	lr

080007fe <GPIO_ToggleOuputPin>:
{
	pGPIOx->IDR = Value;
}

void GPIO_ToggleOuputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80007fe:	b480      	push	{r7}
 8000800:	b083      	sub	sp, #12
 8000802:	af00      	add	r7, sp, #0
 8000804:	6078      	str	r0, [r7, #4]
 8000806:	460b      	mov	r3, r1
 8000808:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 800080a:	687b      	ldr	r3, [r7, #4]
 800080c:	695b      	ldr	r3, [r3, #20]
 800080e:	78fa      	ldrb	r2, [r7, #3]
 8000810:	2101      	movs	r1, #1
 8000812:	fa01 f202 	lsl.w	r2, r1, r2
 8000816:	405a      	eors	r2, r3
 8000818:	687b      	ldr	r3, [r7, #4]
 800081a:	615a      	str	r2, [r3, #20]
}
 800081c:	bf00      	nop
 800081e:	370c      	adds	r7, #12
 8000820:	46bd      	mov	sp, r7
 8000822:	bc80      	pop	{r7}
 8000824:	4770      	bx	lr
	...

08000828 <__libc_init_array>:
 8000828:	b570      	push	{r4, r5, r6, lr}
 800082a:	4d0d      	ldr	r5, [pc, #52]	@ (8000860 <__libc_init_array+0x38>)
 800082c:	4c0d      	ldr	r4, [pc, #52]	@ (8000864 <__libc_init_array+0x3c>)
 800082e:	1b64      	subs	r4, r4, r5
 8000830:	10a4      	asrs	r4, r4, #2
 8000832:	2600      	movs	r6, #0
 8000834:	42a6      	cmp	r6, r4
 8000836:	d109      	bne.n	800084c <__libc_init_array+0x24>
 8000838:	4d0b      	ldr	r5, [pc, #44]	@ (8000868 <__libc_init_array+0x40>)
 800083a:	4c0c      	ldr	r4, [pc, #48]	@ (800086c <__libc_init_array+0x44>)
 800083c:	f000 f818 	bl	8000870 <_init>
 8000840:	1b64      	subs	r4, r4, r5
 8000842:	10a4      	asrs	r4, r4, #2
 8000844:	2600      	movs	r6, #0
 8000846:	42a6      	cmp	r6, r4
 8000848:	d105      	bne.n	8000856 <__libc_init_array+0x2e>
 800084a:	bd70      	pop	{r4, r5, r6, pc}
 800084c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000850:	4798      	blx	r3
 8000852:	3601      	adds	r6, #1
 8000854:	e7ee      	b.n	8000834 <__libc_init_array+0xc>
 8000856:	f855 3b04 	ldr.w	r3, [r5], #4
 800085a:	4798      	blx	r3
 800085c:	3601      	adds	r6, #1
 800085e:	e7f2      	b.n	8000846 <__libc_init_array+0x1e>
 8000860:	08000888 	.word	0x08000888
 8000864:	08000888 	.word	0x08000888
 8000868:	08000888 	.word	0x08000888
 800086c:	0800088c 	.word	0x0800088c

08000870 <_init>:
 8000870:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000872:	bf00      	nop
 8000874:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000876:	bc08      	pop	{r3}
 8000878:	469e      	mov	lr, r3
 800087a:	4770      	bx	lr

0800087c <_fini>:
 800087c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800087e:	bf00      	nop
 8000880:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000882:	bc08      	pop	{r3}
 8000884:	469e      	mov	lr, r3
 8000886:	4770      	bx	lr
